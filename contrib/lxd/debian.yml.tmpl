#-*-mode:yaml;indent-tabs-mode:nil;tab-width:2;coding:utf-8-*-
# vi: ft=yaml tabstop=2 shiftwidth=2 softtabstop=2 expandtab:
# docker run -e "USER=$USER" -e "PASSWD=$(openssl passwd -1 -salt SaltSalt '$USER' )" -w "/workspace" -v "$PWD:/workspace" -v "${HOME}/.ssh/id_rsa.pub:/id_rsa.pub:ro" --rm -it hairyhenderson/gomplate -f /workspace/lxd/golang/debian/profile.yml.tmpl
description: {{ or (.Env.profile) "golang" }} Debian LXD profile
name: {{ or (.Env.profile) "golang-debian" }}
used_by: []
devices:
config:
  limits.memory.swap: "false"
  security.nesting: "true"
  security.privileged: "true"
  user.user-data: |
    #cloud-config
    output: {all: '| tee -a /var/log/cloud-init-output.log'}
    # lxc exec  {{ (or (.Env.profile) "golang-debian") }} -- tail -f /var/log/cloud-init-output.log
    apt:
      sources:
        docker.list:
          source: deb [arch=amd64] https://download.docker.com/linux/debian $RELEASE stable
          keyid: 0EBFCD88
      conf: |
        APT {
          Get {
            Assume-Yes "true";
            Fix-Broken "true";
          };
        };
    write_files:
      - path: /etc/sysctl.d/enabled_ipv4_forwarding.conf
        content: |
          net.ipv4.conf.all.forwarding=1
    write_files:
      - path: /etc/ssh/sshd_config
        content: |
          ChallengeResponseAuthentication no
          # UsePAM yes
          UsePAM no
          X11Forwarding yes
          PrintMotd no
          AcceptEnv LANG LC_*
          Subsystem       sftp    /usr/lib/openssh/sftp-server
          PubkeyAuthentication yes
          PermitRootLogin no
          PasswordAuthentication no
    package_update: true
    package_upgrade: true
    package_reboot_if_required: true
    packages:
      - apt-utils
      - sudo
      - bash-completion
      - cmake
      - pkg-config
      - build-essential
      - libssl-dev
      - apt-transport-https
      - gnupg2
      - gnupg-agent
      - curl
      - wget
      - ca-certificates
      - openssh-server
      - lsb-release
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - fontconfig
      - xfonts-utils
      - software-properties-common
      - nodejs
      - npm
    groups:
        - docker
    system_info:
        default_user:
            groups: [docker]
    users:
      - default
      - name: {{ or (.Env.USER) "golang-debian" }}
        sudo: ['ALL=(ALL) NOPASSWD:ALL']
        groups: sudo,docker
        shell: /bin/bash
        lock_passwd: false
        passwd: {{ or (.Env.PASSWD) "$1$SaltSalt$nSHHaXziL63h20MjLVtVP0" }}
        ssh_authorized_keys:
          - {{ "/id_rsa.pub" | file.Read }}
    runcmd:
      - /bin/bash -xec
      - |
        echo "========= cloud-init =========" > /tmp/cloud-init
        systemctl restart sshd ;
        docker run --rm -i hello-world ;
        export GOROOT=/usr/local/go ;
        export "PATH=$GOROOT/bin:$PATH" ;
        if ! go version > /dev/null 2>&1 ; then
          export GOPATH=/go ;
          wget -q -O - https://git.io/vQhTU | bash -s -- --version 1.17 ;
          chown "$(id -u {{ or (.Env.USER) "golang-debian" }}):$(id -g {{ or (.Env.USER) "golang-debian" }})" "${GOPATH}" -R ;
          chown "$(id -u {{ or (.Env.USER) "golang-debian" }}):$(id -g {{ or (.Env.USER) "golang-debian" }})" "${GOROOT}" -R ;
          (
            echo 'export GOROOT=/usr/local/go' ;
            echo 'export PATH=$GOROOT/bin:$PATH' ;
            echo 'export GOPATH=/go' ;
            echo 'export PATH=$GOPATH/bin:$PATH' ;
            echo 'export GO111MODULE=on' ;
            echo 'export CGO_ENABLED=0' ;
            echo "export CGO_LDFLAGS='-s -w -extldflags \"-static\"'" ;
          ) | tee -a /home/{{ or (.Env.USER) "golang-debian" }}/.bashrc ;
        fi
        export CARGO_HOME="/usr/local/cargo" ;
        export PATH="${CARGO_HOME}/bin:${PATH}" ;
        if ! just --version > /dev/null 2>&1;then
          if ! cargo --version > /dev/null 2>&1;then
            export RUST_VERSION="1.54.0" ;
            export RUSTUP_URL="https://sh.rustup.rs" ;
            export RUSTUP_HOME="/usr/local/rustup" ;
            curl --proto '=https' --tlsv1.2 -fSsl "${RUSTUP_URL}" | bash -s -- -y \
            --no-modify-path \
            --profile default \
            --default-toolchain "${RUST_VERSION}" ;
            chmod -R a+w "${RUSTUP_HOME}" "${CARGO_HOME}" ;
            (
            echo 'export CARGO_HOME="/usr/local/cargo"' ;
            echo 'export PATH=${CARGO_HOME}/bin:$PATH' ;
            echo 'export RUSTUP_HOME="/usr/local/rustup"' ;
            ) | tee -a /home/{{ or (.Env.USER) "golang-debian" }}/.bashrc ;
          fi
          cargo install --all-features just ;
          chown "$(id -u {{ or (.Env.USER) "golang-debian" }}):$(id -g {{ or (.Env.USER) "golang-debian" }})" "${CARGO_HOME}" -R ;
          chown "$(id -u {{ or (.Env.USER) "golang-debian" }}):$(id -g {{ or (.Env.USER) "golang-debian" }})" "${RUSTUP_HOME}" -R ;
        fi
        chown "$(id -u {{ or (.Env.USER) "golang-debian" }}):$(id -g {{ or (.Env.USER) "golang-debian" }})" "${GOROOT}" /home/{{ or (.Env.USER) "golang-debian" }}/.bashrc ;
        exit 0 ;
